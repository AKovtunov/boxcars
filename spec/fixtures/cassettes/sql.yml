---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/completions
    body:
      encoding: UTF-8
      string: '{"prompt":["Given an input question, first create a syntactically correct
        SQLite3 query to run,\nthen look at the results of the query and return the
        answer. Unless the user specifies\nin his question a specific number of examples
        he wishes to obtain, always limit your query\nto at most 5 results using a
        LIMIT clause. You can order the results by a relevant column\nto return the
        most interesting examples in the database.\n\nNever query for all the columns
        from a specific table, only ask for a the few relevant columns given the question.\n\nPay
        attention to use only the column names that you can see in the schema description.
        Be careful to not query for columns that do not exist.\nAlso, pay attention
        to which column is in which table.\n\nUse the following format:\nQuestion:
        \"Question here\"\nSQLQuery: \"SQL Query to run\"\nSQLResult: \"Result of
        the SQLQuery\"\nAnswer: \"Final answer here\"\n\nOnly use the following tables:\nCREATE
        TABLE comments (\n id INTEGER NOT NULL,\n content TEXT NULL,\n name varchar
        NULL,\n post_id INTEGER NULL,\n created_at datetime(6) NOT NULL,\n updated_at
        datetime(6) NOT NULL\n);\nCREATE TABLE posts (\n id INTEGER NOT NULL,\n title
        varchar NULL,\n created_at datetime(6) NOT NULL,\n updated_at datetime(6)
        NOT NULL,\n body TEXT NULL\n);\n\nQuestion: how many comments are there from
        John?\n"],"model":"text-davinci-003","temperature":0.7,"max_tokens":256,"stop":["Answer:"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 16 Feb 2023 14:52:59 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '348'
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - text-davinci-003
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '2567'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - ec9c6103bebb6bedfc91180e8385861d
    body:
      encoding: UTF-8
      string: '{"id":"cmpl-6kZuz81I1uPRAS5yO5lHIfNsSrbwM","object":"text_completion","created":1676559177,"model":"text-davinci-003","choices":[{"text":"SQLQuery:
        SELECT COUNT(*) FROM comments WHERE name = ''John'' LIMIT 5;\nSQLResult: 5\n","index":0,"logprobs":null,"finish_reason":"stop"}],"usage":{"prompt_tokens":331,"completion_tokens":26,"total_tokens":357}}

        '
  recorded_at: Thu, 16 Feb 2023 14:52:59 GMT
recorded_with: VCR 6.1.0
